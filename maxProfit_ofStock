//maximum profit by buying and selling share at most twice 
#include<bits/stdc++.h>
using namespace std;

int maxtwobuySell(int arr[],int n){
    //we will keep track of two buy and sell stocks
    int first_buy= INT_MIN;
    int first_sell=0;
    int second_buy= INT_MIN;
    int second_sell=0;
    
    //now traverse through array
    for(int i=0;i<n;i++){
        //we sset the prices to the negative so that the
        //profit obtain will be convenient
        first_buy=max(first_buy,-arr[i]);
        first_sell=max(first_sell,first_buy+arr[i]);
        
        //we can buy only after first is sold
        second_buy=max(second_buy,first_sell-arr[i]);
        second_sell=max(second_sell,second_buy+arr[i]);
    }
    return second_sell;
}
//driver code
int main() {
 
    int arr[] = {2, 30, 15, 10, 8, 25, 80};
      int n = sizeof(arr)/sizeof(arr[0]);
      cout<<maxtwobuySell(arr,n);
    return 0;
}
